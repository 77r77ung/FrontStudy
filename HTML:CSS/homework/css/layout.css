/* container(=wrap) 박스에 width를 지정하는 이유
    -> 브라우저 화면이 축소되었을 때 내부 div 박스들이 찌그러지는 것을 방지하기 위해서 */
.container {
    width: 1000px;
    margin-left: auto;
    margin-right: auto;
}

.post {
    width: 80%;
    height: 300px;
    /* 방법 1) float: left; 사용 시 float를 사용한 다음 div 속성에 clear: both;를 추가해야 함. */
    float: left;
    /* 방법 2) 단, inline-block;을 사용할 시 div 사이의 공백을 모두 제거해주어야 함.
    display: inline-block; */
}

.photo {
    width: 20%;
    height: 300px;
    /* 방법 1) float: left; 사용 시 float를 사용한 다음 div 속성에 clear: both;를 추가해야 함. */
    float: left;
    /* 방법 2) 단, inline-block;을 사용할 시 div 사이의 공백을 모두 제거해주어야 함.
    display: inline-block; */
}

.profile_photo {
    width:50px;
    /* display: block;을 넣어주면 좋은 이유? */
    display: block;
    float:left;
    margin:20px;
}

.profile_info {
    float:left;
    margin-top: 15px;
}

.blog {
    width: 100%;
    height: 200px;
    /* clear: both; */
}

/* selector 문법
    공백: ~ 안에 있는이라는 뜻 (모든 자식 속성도 포함시킴)
        따라서, navbar class 안에 있는 모든 li 속성들은 아래의 style 속성을 적용시킴.
    >: ~ 안에 있는이라는 뜻(직계 자식만 적용) */
.navbar li{
    display:inline-block;
    width: 60px;
    text-align: center;
    background: #eee;
    padding: 10px;
    border-radius: 5px;
}

.navbar a{
    font-size: 16px;
    /* a 태그의 밑줄 제거 가능 */
    text-decoration: none;
    /* a 태그 추가 속성
        1. a{color: 색상 이름 or 색상 코드;}
        2. a:link {속성} => 기본, 클릭 전 
        3. a:visited {속성} => 클릭 후
        4. a:hover {속성} => 마우스를 위에 올려뒀을 때
        5. a:active => 마우스를 클릭하는 순간
        */

}